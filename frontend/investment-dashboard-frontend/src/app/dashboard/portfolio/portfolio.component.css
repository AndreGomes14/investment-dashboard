.portfolio-container {
  padding: 16px;
}

.page-header {
  margin-bottom: 24px;
}

.page-header h1 {
  margin: 0;
  font-size: 28px;
  font-weight: 500;
  color: #2c3e50;
}

.subtitle {
  color: #7f8c8d;
  margin: 4px 0 0 0;
  font-size: 16px;
}

.metrics-row {
  display: flex;
  gap: 16px;
  margin-bottom: 24px;
  flex-wrap: wrap;
}

.metric-card {
  flex: 1;
  min-width: 280px;
  transition: transform 0.2s;
}

.metric-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
}

.metric-icon {
  background-color: #1a237e;
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  padding: 8px;
}

.metric-value {
  font-size: 28px;
  font-weight: 500;
  margin: 16px 0 8px;
  color: #2c3e50;
}

.metric-change {
  display: flex;
  align-items: center;
  font-size: 14px;
  font-weight: 500;
}

.metric-change.positive {
  color: #27ae60;
}

.metric-change.negative {
  color: #e74c3c;
}

.metric-change mat-icon {
  font-size: 16px;
  height: 16px;
  width: 16px;
  margin-right: 4px;
}

.allocation-chart {
  margin-top: 10px;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 2px 10px rgba(0,0,0,0.05);
}

.allocation-item {
  padding: 8px 12px;
  color: white;
  font-weight: 500;
  font-size: 14px;
  display: inline-block;
  transition: all 0.3s ease;
}

.allocation-item:hover {
  transform: scaleY(1.05);
}

.section-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 16px;
}

.section-header h2 {
  margin: 0;
  font-size: 20px;
  color: #2c3e50;
}

.table-responsive {
  overflow-x: auto;
}

.holdings-table {
  width: 100%;
  border-collapse: collapse;
}

.holdings-table th, .holdings-table td {
  padding: 12px 16px;
  text-align: left;
  border-bottom: 1px solid #ecf0f1;
}

.holdings-table th {
  color: #7f8c8d;
  font-weight: 500;
  font-size: 13px;
  text-transform: uppercase;
}

.holdings-table tr:hover {
  background-color: #f8f9fa;
}

.positive {
  color: #27ae60;
}

.negative {
  color: #e74c3c;
}

@media (max-width: 768px) {
  .metrics-row {
    flex-direction: column;
  }
  
  .metric-card {
    width: 100%;
  }
}

/* Styles for historical chart fullscreen */
.historical-chart-card {
  position: relative; /* Needed for absolute positioning of the button */
  transition: all 0.3s ease-in-out;
}

.fullscreen-button {
  position: absolute;
  top: 8px;
  right: 8px;
  z-index: 10;
  color: black;
}

.fullscreen-chart-card {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 1000;
  margin: 0 !important; /* Override any existing margins */
  padding: 20px; /* Add some padding inside the fullscreen view */
  box-sizing: border-box; /* Ensure padding doesn't increase size beyond viewport */
  overflow-y: auto; /* Allow scrolling if content overflows on smaller screens */
}

.fullscreen-chart-card .mat-card-header {
  padding-bottom: 10px; /* Adjust header padding in fullscreen */
}

.fullscreen-chart-content {
  height: calc(100% - 70px); /* Adjust based on header height and padding */
  display: flex;
  flex-direction: column;
}

.fullscreen-chart-card .chart-container {
  flex-grow: 1;
  width: 100%;
  height: 100% !important; /* Override inline style for height */
}

/* Ensure the chart itself takes up the available space in the container */
.fullscreen-chart-card ngx-charts-line-chart {
  display: block;
  width: 100%;
  height: 100%;
}

/* Make sure other elements are hidden or pushed down when fullscreen is active */
body.chart-fullscreen-active {
  overflow: hidden; /* Prevent scrolling of the body */
}

/* Hide other elements in the app when chart is fullscreen. 
   This might need to be more specific depending on your app structure. 
   A simpler approach is to rely on the fixed positioning and z-index of the chart card itself. */
app-root > *:not(.fullscreen-chart-card) {
  /* display: none; */ /* This might be too aggressive, use with caution */
}
